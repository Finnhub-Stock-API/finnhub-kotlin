/**
 * Finnhub API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package io.finnhub.api.models


import com.squareup.moshi.Json
import java.io.Serializable

/**
 * 
 *
 * @param name Name
 * @param category Fund's category.
 * @param investmentSegment Investment Segment.
 * @param totalNav NAV.
 * @param expenseRatio Expense ratio.
 * @param benchmark Index benchmark.
 * @param inceptionDate Inception date.
 * @param description Fund's description.
 * @param fundFamily Fund Family.
 * @param fundCompany Fund Company.
 * @param manager Fund's managers.
 * @param status Status.
 * @param beta Beta.
 * @param deferredLoad Deferred load.
 * @param fee12b1 12B-1 fee.
 * @param frontLoad Front Load.
 * @param iraMinInvestment IRA minimum investment.
 * @param isin ISIN.
 * @param cusip CUSIP.
 * @param maxRedemptionFee Max redemption fee.
 * @param standardMinInvestment Minimum investment for standard accounts.
 * @param turnover Turnover.
 * @param seriesId Fund's series ID. This field can be used to group multiple share classes into 1 unique fund.
 * @param seriesName Fund's series name.
 * @param classId Class ID.
 * @param className Class name.
 * @param sfdrClassification SFDR classification for EU funds. Under the new classifications, a fund's strategy will labeled under either Article 6, 8 or 9. Article 6 covers funds which do not integrate any kind of sustainability into the investment process. Article 8, also known as ‘environmental and socially promoting’, applies “… where a financial product promotes, among other characteristics, environmental or social characteristics, or a combination of those characteristics, provided that the companies in which the investments are made follow good governance practices.”. Article 9, also known as ‘products targeting sustainable investments’, covers products targeting bespoke sustainable investments and applies “… where a financial product has sustainable investment as its objective and an index has been designated as a reference benchmark.”
 * @param currency Fund's currency
 */

data class MutualFundProfileData (

    /* Name */
    @Json(name = "name")
    val name: kotlin.String? = null,

    /* Fund's category. */
    @Json(name = "category")
    val category: kotlin.String? = null,

    /* Investment Segment. */
    @Json(name = "investmentSegment")
    val investmentSegment: kotlin.String? = null,

    /* NAV. */
    @Json(name = "totalNav")
    val totalNav: kotlin.Float? = null,

    /* Expense ratio. */
    @Json(name = "expenseRatio")
    val expenseRatio: kotlin.Float? = null,

    /* Index benchmark. */
    @Json(name = "benchmark")
    val benchmark: kotlin.String? = null,

    /* Inception date. */
    @Json(name = "inceptionDate")
    val inceptionDate: kotlin.String? = null,

    /* Fund's description. */
    @Json(name = "description")
    val description: kotlin.String? = null,

    /* Fund Family. */
    @Json(name = "fundFamily")
    val fundFamily: kotlin.String? = null,

    /* Fund Company. */
    @Json(name = "fundCompany")
    val fundCompany: kotlin.String? = null,

    /* Fund's managers. */
    @Json(name = "manager")
    val manager: kotlin.String? = null,

    /* Status. */
    @Json(name = "status")
    val status: kotlin.String? = null,

    /* Beta. */
    @Json(name = "beta")
    val beta: kotlin.Float? = null,

    /* Deferred load. */
    @Json(name = "deferredLoad")
    val deferredLoad: kotlin.Float? = null,

    /* 12B-1 fee. */
    @Json(name = "fee12b1")
    val fee12b1: kotlin.Float? = null,

    /* Front Load. */
    @Json(name = "frontLoad")
    val frontLoad: kotlin.Float? = null,

    /* IRA minimum investment. */
    @Json(name = "iraMinInvestment")
    val iraMinInvestment: kotlin.Float? = null,

    /* ISIN. */
    @Json(name = "isin")
    val isin: kotlin.String? = null,

    /* CUSIP. */
    @Json(name = "cusip")
    val cusip: kotlin.String? = null,

    /* Max redemption fee. */
    @Json(name = "maxRedemptionFee")
    val maxRedemptionFee: kotlin.Float? = null,

    /* Minimum investment for standard accounts. */
    @Json(name = "standardMinInvestment")
    val standardMinInvestment: kotlin.Float? = null,

    /* Turnover. */
    @Json(name = "turnover")
    val turnover: kotlin.Float? = null,

    /* Fund's series ID. This field can be used to group multiple share classes into 1 unique fund. */
    @Json(name = "seriesId")
    val seriesId: kotlin.String? = null,

    /* Fund's series name. */
    @Json(name = "seriesName")
    val seriesName: kotlin.String? = null,

    /* Class ID. */
    @Json(name = "classId")
    val classId: kotlin.String? = null,

    /* Class name. */
    @Json(name = "className")
    val className: kotlin.String? = null,

    /* SFDR classification for EU funds. Under the new classifications, a fund's strategy will labeled under either Article 6, 8 or 9. Article 6 covers funds which do not integrate any kind of sustainability into the investment process. Article 8, also known as ‘environmental and socially promoting’, applies “… where a financial product promotes, among other characteristics, environmental or social characteristics, or a combination of those characteristics, provided that the companies in which the investments are made follow good governance practices.”. Article 9, also known as ‘products targeting sustainable investments’, covers products targeting bespoke sustainable investments and applies “… where a financial product has sustainable investment as its objective and an index has been designated as a reference benchmark.” */
    @Json(name = "sfdrClassification")
    val sfdrClassification: kotlin.String? = null,

    /* Fund's currency */
    @Json(name = "currency")
    val currency: kotlin.String? = null

) : Serializable {
    companion object {
        private const val serialVersionUID: Long = 123
    }

}

